;/*******************************************************
;This program was created by the CodeWizardAVR V3.34
;Automatic Program Generator
;© Copyright 1998-2018 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 12/03/2019
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega8535L
;Program type            : Application
;AVR Core Clock frequency: 1.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 128
;*******************************************************/
;
;#include <mega8535.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include <delay.h>
;
;const char tabla7SegmentosAnodo [10]={0xc0 ,0xf9 ,0xa4 ,0xb0 ,0x99 ,0x92 ,0x83 ,0xf8 ,0x80 ,0x90};
;#define decimas  PORTC.0
;#define unidades PORTC.1
;#define decenas  PORTC.2
;#define dp       PORTB.7
;unsigned char adc;
;int calculo;
;char Decenas, Unidades, Decimas;
;
;// Voltage Reference: AVCC pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (1<<ADLAR))
;
;// Read the 8 most significant bits
;// of the AD conversion result
;unsigned char read_adc(unsigned char adc_input)
; 0000 002A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 002B ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	adc_input -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 002C // Delay needed for the stabilization of the ADC input voltage
; 0000 002D delay_us(10);
;PCODE: $00000014 VOL: 0
; 0000 002E // Start the AD conversion
; 0000 002F ADCSRA|=(1<<ADSC);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0030 // Wait for the AD conversion to complete
; 0000 0031 while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0032 ADCSRA|=(1<<ADIF);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0033 return ADCH;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0034 }
;PCODE: $00000022 VOL: 0
;
;void main(void)
; 0000 0037 {
;PCODE: $00000023 VOL: 0
; 0000 0038 // Declare your local variables here
; 0000 0039 
; 0000 003A // Input/Output Ports initialization
; 0000 003B // Port A initialization
; 0000 003C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 003D DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 003E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 003F PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0040 
; 0000 0041 // Port B initialization
; 0000 0042 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0043 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0044 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0045 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0046 
; 0000 0047 // Port C initialization
; 0000 0048 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0049 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 004A // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 004B PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 004C 
; 0000 004D // Port D initialization
; 0000 004E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 004F DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0050 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0051 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0052 
; 0000 0053 // Timer/Counter 0 initialization
; 0000 0054 // Clock source: System Clock
; 0000 0055 // Clock value: Timer 0 Stopped
; 0000 0056 // Mode: Normal top=0xFF
; 0000 0057 // OC0 output: Disconnected
; 0000 0058 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0059 TCNT0=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 005A OCR0=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 005B 
; 0000 005C // Timer/Counter 1 initialization
; 0000 005D // Clock source: System Clock
; 0000 005E // Clock value: Timer1 Stopped
; 0000 005F // Mode: Normal top=0xFFFF
; 0000 0060 // OC1A output: Disconnected
; 0000 0061 // OC1B output: Disconnected
; 0000 0062 // Noise Canceler: Off
; 0000 0063 // Input Capture on Falling Edge
; 0000 0064 // Timer1 Overflow Interrupt: Off
; 0000 0065 // Input Capture Interrupt: Off
; 0000 0066 // Compare A Match Interrupt: Off
; 0000 0067 // Compare B Match Interrupt: Off
; 0000 0068 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0069 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 006A TCNT1H=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 006B TCNT1L=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 006C ICR1H=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 006D ICR1L=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 006E OCR1AH=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 006F OCR1AL=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0070 OCR1BH=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0071 OCR1BL=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0072 
; 0000 0073 // Timer/Counter 2 initialization
; 0000 0074 // Clock source: System Clock
; 0000 0075 // Clock value: Timer2 Stopped
; 0000 0076 // Mode: Normal top=0xFF
; 0000 0077 // OC2 output: Disconnected
; 0000 0078 ASSR=0<<AS2;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0079 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 007A TCNT2=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 007B OCR2=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 007C 
; 0000 007D // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 007E TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 007F 
; 0000 0080 // External Interrupt(s) initialization
; 0000 0081 // INT0: Off
; 0000 0082 // INT1: Off
; 0000 0083 // INT2: Off
; 0000 0084 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0085 MCUCSR=(0<<ISC2);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0086 
; 0000 0087 // USART initialization
; 0000 0088 // USART disabled
; 0000 0089 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 008A 
; 0000 008B // Analog Comparator initialization
; 0000 008C // Analog Comparator: Off
; 0000 008D // The Analog Comparator's positive input is
; 0000 008E // connected to the AIN0 pin
; 0000 008F // The Analog Comparator's negative input is
; 0000 0090 // connected to the AIN1 pin
; 0000 0091 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0092 
; 0000 0093 // ADC initialization
; 0000 0094 // ADC Clock frequency: 500.000 kHz
; 0000 0095 // ADC Voltage Reference: AVCC pin
; 0000 0096 // ADC High Speed Mode: Off
; 0000 0097 // ADC Auto Trigger Source: ADC Stopped
; 0000 0098 // Only the 8 most significant bits of
; 0000 0099 // the AD conversion result are used
; 0000 009A ADMUX=ADC_VREF_TYPE;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 009B ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 009C SFIOR=(1<<ADHSM) | (0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 009D 
; 0000 009E // SPI initialization
; 0000 009F // SPI disabled
; 0000 00A0 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 00A1 
; 0000 00A2 // TWI initialization
; 0000 00A3 // TWI disabled
; 0000 00A4 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00A5 
; 0000 00A6 while (1)
;PCODE: $0000006A VOL: 0
; 0000 00A7       {
; 0000 00A8         adc = read_adc(0);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 00A9         calculo  = adc * 300.00 / 255.00;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00AA         Decenas  = calculo / 100;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 00AB         calculo  %= 100;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 00AC         Unidades = calculo / 10;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 00AD         Decimas  = calculo % 10;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 00AE 
; 0000 00AF         PORTB = tabla7SegmentosAnodo[Decenas];
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 00B0         dp       = 1;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00B1         decenas  = 1;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 00B2         unidades = 0;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 00B3         decimas  = 0;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00B4         delay_ms(5);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00B5         PORTB = tabla7SegmentosAnodo[Unidades];
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00B6         dp       = 0;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 00B7         decenas  = 0;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00B8         unidades = 1;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 00B9         decimas  = 0;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00BA         delay_ms(5);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00BB         PORTB = tabla7SegmentosAnodo[Decimas];
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00BC         dp       = 1;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00BD         decenas  = 0;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00BE         unidades = 0;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00BF         decimas  = 1;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00C0         delay_ms(5);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00C1 
; 0000 00C2       }
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 00C3 }
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
